openapi: 3.0.3
info:
  title: Буккроссинг API
  version: 1.0.1
servers:
  - url: https://api.bookcrossing.com/v1
security: 
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        title:
          type: string
        author:
          type: string
        genre:
          type: string
        coverImageUrl:
          type: string
        description:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review'  
    BookDetails:
      allOf:
        - $ref: '#/components/schemas/Book'
        - type: object
          properties:
           id:
              type: string
              readOnly: true 
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        username:
          type: string
    Review:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
        text:
          type: string
        rating:
          type: integer
          format: int32
          minimum: 1
          maximum: 5
        createdAt:
          type: string
          format: date-time

    ExchangeRequest:
      type: object
      properties:
        requesterId:
          type: integer
          format: int64
        bookId:
          type: integer
          format: int64
        recipientId:
          type: integer
          format: int64

    WishlistRequest:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        bookId:
          type: integer
          format: int64
          
paths:
  /api/books:
    get:
      summary: Получить список книг
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Поисковый запрос (название, автор)
        - in: query
          name: genre
          schema:
            type: string
          description: Фильтр жанра
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Номер страницы
        - in: query
          name: pageSize
          schema:
            type: integer
            default: 20
          description: Количество книг на странице
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
                  totalCount:
                    type: integer
        '400':
          description: Неуспешный запрос
        '500':
          description: Внутренняя ошибка сервера

  /api/books/{book_id}:
    get:
      summary: Получить информацию о книге
      parameters:
        - in: path
          name: book_id
          schema:
            type: integer
            format: int64
          required: true
          description: Book ID
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDetails'
        '404':
          description: Книга не найдена
        '500':
          description: Внутренняя ошибка сервера

  /api/books/{book_id}/users:
    get:
      summary: Получить пользователей, зарегистрировавших книгу
      parameters:
        - in: path
          name: book_id
          schema:
            type: integer
            format: int64
          required: true
          description: Book ID
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '404':
          description: Книга не найдена
        '500':
          description: Внутренняя ошибка сервера

  /api/books/{book_id}/reviews:
    get:
      summary: Получить отзывы на книгу
      parameters:
        - in: path
          name: book_id
          schema:
            type: integer
            format: int64
          required: true
          description: Book ID
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '404':
          description: Книга не найдена
        '500':
          description: Внутренняя ошибка сервера

  /api/requests:
    post:
      summary: Отправлить запрос на обмен книгой
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExchangeRequest'
      responses:
        '201':
          description: Запрос создан
        '400':
          description: Неуспешный запрос
        '500':
          description: Внутренняя ошибка сервера

  /api/wishlist:
    post:
      summary:  Добавлить книгу в список желаемых
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WishlistRequest'
      responses:
        '201':
          description: Книга добавлена
        '400':
          description: Неуспешный запрос
        '500':
          description: Внутренняя ошибка сервера